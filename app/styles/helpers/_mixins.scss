@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin absoluteCenter($direction: "left", $position: absolute) {
    position: $position;
    @if $direction == "left" {
        left: 50%;
        transform: translateX(-50%);
    }

    @if $direction == "top" {
        top: 50%;
        transform: translateY(-50%);
    }

    @if $direction == "both" {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin maxWidth($breakPoint) {
    @media screen and (max-width: $breakPoint) {
        @content;
    }
}

@mixin minWidth($breakPoint) {
    @media screen and (min-width: $breakPoint) {
        @content;
    }
}

@mixin textClamp($row: 1, $size: 100%) {
    display: -webkit-box;
    -webkit-line-clamp: $row;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $size;
    max-width: $size;
    white-space: pre-wrap;
    word-break: break-all;
}

@mixin hoverEffect($itemClass, $contentClass, $isTranform: "") {
    #{$itemClass} {
        position: relative;
        z-index: 1;
        transition: all 0.25s linear;
        #{$contentClass} {
            opacity: 0;
            visibility: hidden;
            position: absolute;
            transition: all 0.25s linear;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
            z-index: 2;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        &::after {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            transition: all 0.25s linear;
            background-color: $third-color;
            top: 0;
            left: 0;
            z-index: -1;
        }

        &:hover {
            #{$contentClass} {
                opacity: 1;
                visibility: visible;
            }
            @if $isTranform == "transform" {
                transform: translate(-1rem, -1rem);
                &::after {
                    transform: translate(1rem, 1rem);
                }
            }
        }
    }
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}
